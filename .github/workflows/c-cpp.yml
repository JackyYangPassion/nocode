name: C/C++ CI

on:
  workflow_dispatch:
    inputs:
      repository_url:
        required: true
        default: 'topling/toplingdb'
      repository_branch:
        required: false
        default: 'sideplugin-7.10.0-2022-12-21-bec42648'
      deploy_maven:
        required: true
        type: boolean
        description: publish to maven nexus
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository_url }}
          ref: ${{ inputs.repository_branch }}
          fetch-depth: 1
          
      - name: Init Env & Compile RocksDB
        run: |
         sudo apt-get update -y
         sudo apt-get install -y libjemalloc-dev libaio-dev libgflags-dev zlib1g-dev \
                                 libbz2-dev libcurl4-gnutls-dev liburing-dev
         make --version && gcc --version
         git submodule update --init --recursive
         mkdir -p ~/.ssh
         ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
         # this step could take a long time?
         make -j`nproc` DEBUG_LEVEL=0 shared_lib
         sudo make install-shared PREFIX=/opt

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
      #    settings-path: ${{ github.workspace }} # location for the settings.xml file
      #- name: Cache Make
      #  uses: actions/cache@v3
      #  with:
      #    path: ~/.m2/repository
      #    key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      #    restore-keys: ${{ runner.os }}-m2

      - name: Compile RocksDBJava
        run: |
          echo $JAVA_HOME && ls -l $(which jps)
          make rocksdbjava -j`nproc` DEBUG_LEVEL=0

      - name: Move to Local Maven Repo
        run: |
          cd java/target || exit
          cp -v rocksdbjni-7.10.0-linux64.jar rocksdbjni-7.10.0-SNAPSHOT-linux64.jar
          mvn install:install-file -ntp -Dfile=rocksdbjni-7.10.0-SNAPSHOT-linux64.jar \
          -DgroupId=org.rocksdb -DartifactId=rocksdbjni -Dversion=7.10.0-SNAPSHOT -Dpackaging=jar

      # for compile SideGetBenchmarks
      - name: Build with Maven
        run: |
          echo ${{ github.workspace }} && echo $GITHUB_WORKSPACE
          pwd && ls -l
          (cd java/jmh && ls -l && pwd) || exit
          mvn clean package -e -ntp -f /home/runner/work/nocode/nocode/java/jmh/pom.xml # -B in non-interactive (Batch) mode
          
      - name: Run SideGetBenchmarks & Check it
        run: |
          mkdir -p /dev/shm/db_bench_enterprise
          cp -v ../../sideplugin/rockside/src/topling/web/{style.css,index.html} /dev/shm/db_bench_enterprise
          export LD_LIBRARY_PATH=/opt/lib:$LD_LIBRARY_PATH # for libterark-*
          export LD_PRELOAD=libterark-zbs-g++-12.1-r.so:libterark-fsa-g++-12.1-r.so:libjemalloc.so
          java -jar target/rocksdbjni-jmh-1.0-SNAPSHOT-benchmarks.jar \
               -p keyCount=1000 -p keySize=128 -p valueSize=32768 \
               -p sideConf=../../sideplugin/rockside/sample-conf/db_bench_enterprise.yaml SideGetBenchmarks
          curl http://127.0.0.1:2011
          
      - if: ${{ inputs.deploy_maven }} 
        uses: s4u/maven-settings-action@v2.8.0
      - name: Publish JAR to GitHub Packages
        if: ${{ inputs.deploy_maven }}
        run: |
          ls -l $GITHUB_WORKSPACE && cat $GITHUB_WORKSPACE/settings.xml
          mvn deploy -e -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}

name: "Docker Server Image"

on:
  schedule:
    - cron: '0 23 * * 1'
  workflow_dispatch:
    inputs:
      repository_url:
        required: true
        default: 'apache/hugegraph'
      repository_branch:
        required: true
        default: 'master'
      image_url:
        required: true
        default: 'hugegraph/hugegraph'
      tag:
        required: true
        default: 'latest'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # TODO: support auto tag/label the images by action
      # Refer: https://docs.docker.com/build/ci/github-actions/manage-tags-labels/
      repository_url: apache/hugegraph
      repository_branch: master
      image_url: hugegraph/hugegraph:latest

    steps:
      - name: Reset If Need
        if: github.event_name == 'workflow_dispatch'
        run: |
         echo "repository_url=${{ inputs.repository_url }}" >> $GITHUB_ENV
         echo "repository_branch=${{ inputs.repository_branch }}" >> $GITHUB_ENV
         echo "image_url=${{ inputs.image_url }}" >> $GITHUB_ENV
         echo "tag=${{ inputs.tag }}" >> $GITHUB_ENV

      # Used for build X64 & ARM images together
      # Refer: https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          #registry: ${{ inputs.image_url }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ env.repository_url }}
          ref: ${{ env.repository_branch }}
          fetch-depth: 2
          
      - name: Build X86 Image
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: ${{ env.image_url }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Test X86 Image
        run: |
          docker version
          docker images
          docker run -itd $image_url
          sleep 15s
          docker ps -a
          sleep 15s
          docker ps -a

      - name: Build ARM & Push all
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.image_url }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

     # - name: Publish Docker images
     #   run: |
     #     pwd && ls -lh
     #     export DOCKER_CLI_EXPERIMENTAL=enabled
     #     docker version
     #     docker build -t $IMAGE_URI .
     #     docker images
     #     docker run -itd $IMAGE_URI
     #     sleep 15s
     #     docker ps -a
     #     sleep 15s
     #     docker ps -a
     #     docker push $IMAGE_URI
          

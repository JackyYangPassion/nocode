name: "Publish Server Image"

on:
  #schedule:
  #  - cron:  '50 0-23 * * *'
  workflow_dispatch:
    inputs:
      repository_url:
        required: true
        default: 'apache/hugegraph'
      repository_branch:
        required: true
        default: 'docker'
      image_url:
        required: true
        default: 'hugegraph/hugegraph:latest'
      docker_registry_url:
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Reset env
        if: github.event_name == 'workflow_dispatch'
        run: |
         echo "repository_url=${{ inputs.repository_url }}" >> $GITHUB_ENV
         echo "repository_branch=${{ inputs.repository_branch }}" >> $GITHUB_ENV
         echo "computer_image_url=${{ inputs.image_url }}" >> $GITHUB_ENV
         echo "docker_registry_url=${{ inputs.docker_registry_url }}" >> $GITHUB_ENV
          
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.docker_registry_url }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

       # TODO: publish with optional release tag
      - name: Publish Docker images
        run: |
          pwd && ls -lh
          docker build -t hugegraph .
          docker images
          #docker push ${{ inputs.image_url }}

#
#      - name: Install JDK 11
#        uses: actions/setup-java@v3
#        with:
#          java-version: '11'
#          distribution: 'zulu'
#
#      - name: Checkout
#        uses: actions/checkout@v3
#        with:
#          repository: ${{ env.repository_url }}
#          ref: ${{ env.repository_branch }}
#          fetch-depth: 2
#
#      - name: Cache Maven packages
#        uses: actions/cache@v3
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#
#      - name: Build images
#        env:
#          TRAVIS_DIR: computer-dist/src/assembly/travis
#        run: $TRAVIS_DIR/build-images.sh ${{ env.computer_image_url }} ${{ env.operator_image_url }}
          
